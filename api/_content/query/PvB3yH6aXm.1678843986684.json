{"_path":"/code/java/sol","_dir":"java","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"sol","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"sol"},"children":[{"type":"text","value":"sol"}]},{"type":"element","tag":"h2","props":{"id":"线程"},"children":[{"type":"text","value":"线程"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HashMap 与 ConcurrentHashMap 的实现原理是怎样的？ConcurrentHashMap 是如何保证线程安全的？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"集合类中的 List 和 Map 的线程安全版本是什么，如何保证线程安全的？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ThreadLocal 实现原理是什么？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"线程池是如何实现的？简述线程池的任务策略"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何设计一个线程池"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 线程和操作系统的线程是怎么对应的？Java线程是怎样进行调度的?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 线程池里的 arrayblockingqueue 与 linkedblockingqueue 的使用场景和区别"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 是如何实现线程安全的，哪些数据结构是线程安全的？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 中 sleep() 与 wait() 的区别"}]}]},{"type":"element","tag":"h2","props":{"id":"垃圾回收"},"children":[{"type":"text","value":"垃圾回收"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 中垃圾回收机制中如何判断对象需要回收？常见的 GC 回收算法有哪些？"}]}]},{"type":"element","tag":"h2","props":{"id":"设计模式"},"children":[{"type":"text","value":"设计模式"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"./cpp.md#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"},"children":[{"type":"text","value":"click"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如何设计 Java 的异常体系？"}]},{"type":"element","tag":"h2","props":{"id":"锁"},"children":[{"type":"text","value":"锁"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"synchronized 关键字底层是如何实现的？它与 Lock 相比优缺点分别是什么？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 Synchronized，Volatile，可重入锁的不同使用场景及优缺点"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 常见锁有哪些？ReetrantLock 是怎么实现的？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 Synchronized，Volatile，可重入锁的不同使用场景及优缺点"}]}]},{"type":"element","tag":"h2","props":{"id":"jvm"},"children":[{"type":"text","value":"JVM"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 JVM 的内存模型 JVM 内存是如何对应到操作系统内存的？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"JVM 中内存模型是怎样的，简述新生代与老年代的区别？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"JVM 是怎么去调优的？简述过程和调优的结果"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"什么是内存泄漏，怎么确定内存泄漏？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 异常有哪些类型？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"volatile 关键字解决了什么问题，它的实现原理是什么？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"String 类能不能被继承？为什么？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"== 和 equals() 的区别？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 BIO, NIO, AIO 的区别"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 Spring AOP 的原理"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 Java 的反射机制及其应用场景"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述动态代理与静态代理"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 Java 的 happen before 原则"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"简述 ArrayList 与 LinkedList 的底层实现以及常见操作的时间复杂度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 类的加载流程是怎样的？什么是双亲委派机制？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Java 中接口和抽象类的区别"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"hashcode 和 equals 方法的联系"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Spring MVC 的原理和流程"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"线程","depth":2,"text":"线程"},{"id":"垃圾回收","depth":2,"text":"垃圾回收"},{"id":"设计模式","depth":2,"text":"设计模式"},{"id":"锁","depth":2,"text":"锁"},{"id":"jvm","depth":2,"text":"JVM"}]}},"_type":"markdown","_id":"content:3.code:java:sol.md","_source":"content","_file":"3.code/java/sol.md","_extension":"md"}