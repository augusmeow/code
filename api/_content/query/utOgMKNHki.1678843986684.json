{"_path":"/code/future/prepare","_dir":"future","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Prepare","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"prepare"},"children":[{"type":"text","value":"Prepare"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What are you preparing to do"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"web service"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"数据结构 算法"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"操作系统"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因此优先考虑使用组合而不是继承。"}]}]},{"type":"element","tag":"h2","props":{"id":"题库每日"},"children":[{"type":"element","tag":"a","props":{"href":"./practice"},"children":[{"type":"text","value":"题库每日"}]}]},{"type":"element","tag":"h2","props":{"id":"hang-in-there"},"children":[{"type":"text","value":"Hang in There"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/DrAugus/cpp/master/src/leetcode/700.cpp","rel":["nofollow"]},"children":[{"type":"text","value":"BST查找树中是否有指定元素"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/DrAugus/cpp/master/src/leetcode/20.cpp","rel":["nofollow"]},"children":[{"type":"text","value":"括号匹配"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"十个桶的hash表，key%10，142存放在哪里"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"搜索排序的时间复杂度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"合并有序/无序的两个数组时间复杂度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"排序算法的稳定性"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"先序、中序、后序遍历"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In a binary tree that has K nodes having two children and L leaves, show the relation between K and L"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"B-Trees are used commonly for ?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"影响哈希表查找的效率有哪些"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Big(O) notation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A Priority-Queue is implemented as a Max-Heap. 最小堆、最大堆的插入"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"双向链表什么时候比单链表效率更高"}]}]},{"type":"element","tag":"h2","props":{"id":"其他"},"children":[{"type":"text","value":"其他"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"../interview/cpp/concept#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%B8%8E%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB"},"children":[{"type":"text","value":"解释面向对象语言"}]},{"type":"text","value":"，"},{"type":"element","tag":"a","props":{"href":"../interview/cpp/c_cpp_diff"},"children":[{"type":"text","value":"C和C++的区别"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"各种排序"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"数组中找重复值"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Git常用命令、简单解释一下Git原理、怎么理解git是一个分布式系统"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CI/CD的Job"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"zookeeper介绍一下 (从CAP 数据一致性等分布式问题出发 介绍了基本原理和应用场景)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"主节点崩溃了, 集群会发生什么"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"讲一下HTTP协议,为什么说是无状态的, POST/GET请求的区别, 1.X 和 2.0区别"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"../interview/paxos"},"children":[{"type":"text","value":"paxos"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"举一个会出现StackOverflow错误的情况,并说说为什么(递归...)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何处理网页的大量请求"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何处理并发造成的数据不一致问题，加锁，锁的类型有哪些"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何不采用加锁处理并发问题"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何查找一个同学的课程平均成绩并排序，每个同学选择的课程可能不一样，不使用冗余字段"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果课程成绩具有权重，如何设计表，如何进行平均成绩排序"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何设计一个OJ系统\n就刚才设计的OJ系统，设计出对应数据库表的关系\n如何处理高并发情况下，用户提交代码造成系统卡死问题"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"把1000个球放入10盒子后，保证给任意1——1000任意一个数n，能找到对应几个盒子中的个数的和sum等于n"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"访问一个网页的具体流程"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"解释LSTM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"给定一个天平，一个2g的砝码和一个7g的砝码，以及若干盐，求如何在三次以内称到50g的盐"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"给定链表和整数k，链表的每k个数逆序，如链表为1->2->3->4->5->null, k=3,结果得到3->2->1->5->4-null(\n编程界面没有像leetcod一样给出链表的结构定义和后台没有测试用例，需要自己写链表结构定义和测试过程，测试用例自己想)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"给定一个有序的数组，和一个整数k，求数组里和为k的所有数对"}]}]},{"type":"element","tag":"h2","props":{"id":"c"},"children":[{"type":"text","value":"C++"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"c++的基础知识"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"c++11特性"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"../interview/design-pattern"},"children":[{"type":"text","value":"设计模式"}]},{"type":"text","value":",单例、适配器模式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"内存管理"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C/C++的段错误是什么"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"写一个c++的类 实现一个string类，然后支持拷贝构造和移动构造和支持vector容器，用智能指针"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"多态"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"死锁"}]}]},{"type":"element","tag":"h2","props":{"id":"算法"},"children":[{"type":"text","value":"算法"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"递归二叉树"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/DrAugus/cpp/master/src/leetcode/20.cpp","rel":["nofollow"]},"children":[{"type":"text","value":"括号匹配"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"树状数组"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"图表设计合理性"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"反转链表"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"堆的插入删除具体过程"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"图算法（最短路、最小生成树）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"跳表、数组链表的优缺点"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一道dfs，一道dp，一道字符串处理，写完了指着代码一个个问变量分别在jvm中的什么区域，引出提问jvm内存区域，垃圾回收算法.\n然后dfs问了复杂度,\ndp问了最优子结构这些基本概念,字符串问了StringBuilder和StringBuffer的区别."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一维二分查找，手写代码"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"二维二分查找，讲解思路，计算时间复杂度，如何将时间复杂度将到O(n)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"给出BST，然后给出number，返回number是否在BST"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"二叉树的按层求和，递归和迭代"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"给定数组，求两个数的最大差值，要求，大数在小数后面"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HashMap和HashTable"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ArrayList和Vector"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GC"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"垃圾回收算法"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"编写代码求股票最大利润（假如一个数组中存储了一个股票，第i个元素表示第i天的股票价格，只允许一次买入和一次卖出，请提供一个算法，计算出通过卖出和买入可以得到的最大利润）"}]}]},{"type":"element","tag":"h2","props":{"id":"操作系统"},"children":[{"type":"text","value":"操作系统"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"为什么要分段分页"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"虚拟内存原理"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"银行家算法"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"进程和线程的区别"}]}]},{"type":"element","tag":"h2","props":{"id":"前端"},"children":[{"type":"text","value":"前端"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"跨域问题"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"TypeScript中Interface和Type的区别"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"TypeScript中的类型断言"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"事件捕获"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"事件冒泡"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Async函数以及得到的返回值，如果Aysnc return new Promise那返回值是什么"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"let和const的区别，const常量为啥是不可以改变的"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"对this的理解，This在不同的情况下代表什么"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"浏览器缓存"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Cookie，session，localStorage，sessionStorage的区别和使用场景"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Css盒模型，如果Width是100，Border是1，padding是10，在浏览器上的width是多少（很简单的问题但是太久没看忘记了哈哈哈）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Relative和absolute的区别"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"React单向数据流"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hook在什么情况下不能使用，为什么"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SetState为啥不能立即看到改变"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"React中的key有什么作用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"非受控组件和受控组件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"高阶组件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"类组件和函数组件的区别"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"题库每日","depth":2,"text":"题库每日"},{"id":"hang-in-there","depth":2,"text":"Hang in There"},{"id":"其他","depth":2,"text":"其他"},{"id":"c","depth":2,"text":"C++"},{"id":"算法","depth":2,"text":"算法"},{"id":"操作系统","depth":2,"text":"操作系统"},{"id":"前端","depth":2,"text":"前端"}]}},"_type":"markdown","_id":"content:3.code:1.future:prepare.md","_source":"content","_file":"3.code/1.future/prepare.md","_extension":"md"}