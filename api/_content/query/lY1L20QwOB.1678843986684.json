{"_path":"/cpp/concept/reference","_dir":"concept","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"引用","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"引用"},"children":[{"type":"text","value":"引用"}]},{"type":"element","tag":"h2","props":{"id":"左值引用"},"children":[{"type":"text","value":"左值引用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"常规引用，一般表示对象的身份。"}]},{"type":"element","tag":"h2","props":{"id":"右值引用"},"children":[{"type":"text","value":"右值引用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"右值引用就是必须绑定到右值（一个临时对象、将要销毁的对象）的引用，一般表示对象的值。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n右值引用可实现转移语义（Move Semantics）和完美转发（Perfect Forwarding），它的主要目的有两个方面："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"消除两个对象交互时不必要的对象拷贝，节省运算存储资源，提高效率。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"能够更简洁明确地定义泛型函数。"}]}]},{"type":"element","tag":"h2","props":{"id":"引用折叠"},"children":[{"type":"text","value":"引用折叠"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"X& &"}]},{"type":"text","value":"、"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"X& &&"}]},{"type":"text","value":"、"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"X&& &"}]},{"type":"text","value":"可折叠成 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"X&"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"X&& &&"}]},{"type":"text","value":" 可折叠成 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"X&&"}]}]}]},{"type":"element","tag":"h2","props":{"id":"什么是引用申明和使用引用要注意哪些问题"},"children":[{"type":"text","value":"什么是“引用”？申明和使用“引用”要注意哪些问题"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"引用就是某个目标变量的“别名”(alias)\n，对应用的操作与对变量直接操作效果完全相同。申明一个引用的时候，切记要对其进行初始化。引用声明完毕后，相当于目标变量名有两个名称，即该目标原名称和引用名，不能再把该引用名作为其他变量名的别名。声明一个引用，不是新定义了一个变量，它只表示该引用名是目标变量名的一个别名，它本身不是一种数据类型，因此引用本身不占存储单元，系统也不给引用分配存储单元。不能建立数组的引用。"}]},{"type":"element","tag":"h2","props":{"id":"将引用作为函数参数有哪些特点"},"children":[{"type":"text","value":"将“引用”作为函数参数有哪些特点"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"传递引用给函数与传递指针的效果是一样的。这时，被调函数的形参就成为原来主调函数中的实参变量或对象的一个别名来使用，所以在被调函数中对形参变量的操作就是对其相应的目标对象（在主调函数中）的操作。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用引用传递函数的参数，在内存中并没有产生实参的副本，它是直接对实参操作；而使用一般变量传递函数的参数，当发生函数调用时，需要给形参分配存储单元，形参变量是实参变量的副本；如果传递的是对象，还将调用拷贝构造函数。因此，当参数传递的数据较大时，用引用比用一般变量传递参数的效率和所占空间都好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用指针作为函数的参数虽然也能达到与使用引用的效果，但是，在被调函数中同样要给形参分配存储单元，且需要重复使用\"*\n指针变量名\"的形式进行运算，这很容易产生错误且程序的阅读性较差；另一方面，在主调函数的调用点处，必须用变量的地址作为实参。而引用更容易使用，更清晰。"}]}]},{"type":"element","tag":"h2","props":{"id":"在什么时候需要使用常引用"},"children":[{"type":"text","value":"在什么时候需要使用“常引用”"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果既要利用引用提高程序的效率，又要保护传递给函数的数据不在函数中被改变，就应使用常引用。常引用声明方式：const 类型标识符\n&引用名=目标变量名；"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例1"}]}]},{"type":"element","tag":"code","props":{"code":"int a ;\nconst int &ra=a;\nra=1; //错误\na=1; //正确\n","language":"cpp","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" a ;"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"ra"}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"a;"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"ra"}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-2a476c"},"children":[{"type":"text","value":" //错误"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"a"}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-2a476c"},"children":[{"type":"text","value":" //正确"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例2"}]}]},{"type":"element","tag":"code","props":{"code":"string foo( );\nvoid bar(string & s);\n","language":"cpp","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-dda3e9"},"children":[{"type":"text","value":"string"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"foo"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"( );"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"void"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"bar"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-dda3e9"},"children":[{"type":"text","value":"string"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-dda3e9"},"children":[{"type":"text","value":"s"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":");"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那么下面的表达式将是非法的："}]},{"type":"element","tag":"code","props":{"code":"bar(foo( ));\nbar(\"hello world\");\n","language":"cpp","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"bar"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"foo"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"( ));"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"bar"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-3486c0"},"children":[{"type":"text","value":"\"hello world\""}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":");"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"原因在于foo( )和\"hello world\"\n串都会产生一个临时对象，而在C++中，这些临时对象都是const类型的。因此上面的表达式就是试图将一个const类型的对象转换为非const类型，这是非法的。引用型参数应该在能被定义为const的情况下，尽量定义为const\n。"}]},{"type":"element","tag":"h2","props":{"id":"将引用作为函数返回值类型的格式好处和需要遵守的规则"},"children":[{"type":"text","value":"将“引用”作为函数返回值类型的格式、好处和需要遵守的规则?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"格式："},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"类型标识符 &函数名（形参列表及类型说明）{ //函数体 }"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n好处：在内存中不产生被返回值的副本（注意：正是因为这点原因，所以返回一个局部变量的引用是不可取的。因为随着该局部变量生存期的结束，相应的引用也会失效，产生runtime\nerror!"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n注意事项："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不能返回局部变量的引用。这条可以参照Effective C++"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"的Item\n31。主要原因是局部变量会在函数返回后被销毁，因此被返回的引用就成为了\"无所指\"的引用，程序会进入未知状态。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不能返回函数内部new分配的内存的引用。这条可以参照Effective C++"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"的Item\n31。虽然不存在局部变量的被动销毁问题，可对于这种情况（返回函数内部new分配内存的引用），又面临其它尴尬局面。例如，被函数返回的引用只是作为一个临时变量出现，而没有被赋予一个实际的变量，那么这个引用所指向的空间（由new分配）就无法释放，造成memory\nleak。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可以返回类成员的引用，但最好是const。这条原则可以参照Effective C++"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"的Item 30。主要原因是当对象的属性是与某种业务规则（business\nrule）相关联的时候，其赋值常常与某些其它属性或者对象的状态有关，因此有必要将赋值操作封装在一个业务规则当中。如果其它对象可以获得该属性的非常量引用（或指针），那么对该属性的单纯赋值就会破坏业务规则的完整性。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"流操作符重载返回值申明为“引用”的作用："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"流操作符<<和>>，这两个操作符常常希望被连续使用，例如：cout << \"hello\" << endl;\n因此这两个操作符的返回值应该是一个仍然支持这两个操作符的流引用。可选的其它方案包括：返回一个流对象和返回一个流对象指针。但是对于返回一个流对象，程序必须重新（拷贝）构造一个新的流对象，也就是说，连续的两个<<\n操作符实际上是针对不同对象的！这无法让人接受。对于返回一个流指针则不能连续使用<<\n操作符。因此，返回一个流对象引用是惟一选择。这个唯一选择很关键，它说明了引用的重要性以及无可替代性，也许这就是C++语言中引入引用这个概念的原因吧。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"赋值操作符=。这个操作符象流操作符一样，是可以连续使用的，例如：x = j = 10;或者(x=10)\n=100;赋值操作符的返回值必须是一个左值，以便可以被继续赋值。因此引用成了这个操作符的惟一返回值选择。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在另外的一些操作符中，却千万不能返回引用：+-*/ 四则运算符。它们不能返回引用，Effective C++"},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n的Item23详细的讨论了这个问题。主要原因是这四个操作符没有side\neffect，因此，它们必须构造一个对象作为返回值，可选的方案包括：返回一个对象、返回一个局部变量的引用，返回一个new分配的对象的引用、返回一个静态对象引用。根据前面提到的引用作为返回值的三个规则，第2、3两个方案都被否决了。静态对象的引用又因为((\na+b) == (c+d))会永远为true而导致错误。所以可选的只剩下返回一个对象了。"}]}]},{"type":"element","tag":"code","props":{"code":"int &put(int n);\nint vals[10];\nint error = -1;\nvoid main() {\n  put(0) = 10; //以put(0)函数值作为左值，等价于vals[0]=10;\n  put(9) = 20; //以put(9)函数值作为左值，等价于vals[9]=20;\n  cout << vals[0];\n  cout << vals[9];\n}\nint &put(int n) {\n  if (n >= 0 && n <= 9) return vals[n];\n  else {\n    cout << \"subscript error\";\n    return error;\n  }\n}\n","language":"cpp","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-dda3e9"},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":");"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" vals["}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"10"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"];"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" error "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"void"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"main"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"() {"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"10"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-2a476c"},"children":[{"type":"text","value":" //以put(0)函数值作为左值，等价于vals[0]=10;"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"9"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"20"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-2a476c"},"children":[{"type":"text","value":" //以put(9)函数值作为左值，等价于vals[9]=20;"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"  cout "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" vals["}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"];"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"  cout "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" vals["}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"9"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"];"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-b65b3c"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-dda3e9"},"children":[{"type":"text","value":"n"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":") {"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" (n "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":">="}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"&&"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" n "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"<="}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-002f3a"},"children":[{"type":"text","value":"9"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" vals[n];"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"else"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" {"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"    cout "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-3486c0"},"children":[{"type":"text","value":"\"subscript error\""}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-08a431"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":" error;"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"  }"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5ce1dc"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-3486c0{color:#0A3069}\n.ct-b65b3c{color:#8250DF}\n.ct-dda3e9{color:#953800}\n.ct-2a476c{color:#6E7781}\n.ct-002f3a{color:#0550AE}\n.ct-5ce1dc{color:#24292F}\n.ct-08a431{color:#CF222E}\n.dark .ct-08a431{color:#FF7B72}\n.dark .ct-5ce1dc{color:#C9D1D9}\n.dark .ct-002f3a{color:#79C0FF}\n.dark .ct-2a476c{color:#8B949E}\n.dark .ct-dda3e9{color:#FFA657}\n.dark .ct-b65b3c{color:#D2A8FF}\n.dark .ct-3486c0{color:#A5D6FF}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"左值引用","depth":2,"text":"左值引用"},{"id":"右值引用","depth":2,"text":"右值引用"},{"id":"引用折叠","depth":2,"text":"引用折叠"},{"id":"什么是引用申明和使用引用要注意哪些问题","depth":2,"text":"什么是“引用”？申明和使用“引用”要注意哪些问题"},{"id":"将引用作为函数参数有哪些特点","depth":2,"text":"将“引用”作为函数参数有哪些特点"},{"id":"在什么时候需要使用常引用","depth":2,"text":"在什么时候需要使用“常引用”"},{"id":"将引用作为函数返回值类型的格式好处和需要遵守的规则","depth":2,"text":"将“引用”作为函数返回值类型的格式、好处和需要遵守的规则?"}]}},"_type":"markdown","_id":"content:1.cpp:concept:reference.md","_source":"content","_file":"1.cpp/concept/reference.md","_extension":"md"}